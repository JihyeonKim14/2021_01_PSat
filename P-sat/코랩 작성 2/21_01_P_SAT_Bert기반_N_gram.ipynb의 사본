{"nbformat":4,"nbformat_minor":0,"metadata":{"accelerator":"GPU","colab":{"name":"21_01_P_SAT_Bert기반_N_gram.ipynb의 사본","provenance":[{"file_id":"1SO4ojswKNwVfW-IsfpSpV8mIIDTeyAoU","timestamp":1620217361616}],"collapsed_sections":["FHYJZjZYfEmD"]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"},"widgets":{"application/vnd.jupyter.widget-state+json":{"b06d8a9edca9495cb03c05984ebea5bb":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_5e62bb7c7bf24989815c3ed77a2290dc","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_3510d1a72aed4bb092eac55b9f016aa3","IPY_MODEL_3845f97935c0465294e63ff2ac289fff"]}},"5e62bb7c7bf24989815c3ed77a2290dc":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"3510d1a72aed4bb092eac55b9f016aa3":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_c79002f45eba42ca8d88be5dd4f1ff89","_dom_classes":[],"description":"100%","_model_name":"FloatProgressModel","bar_style":"success","max":244733649,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":244733649,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_a8d9074c1b2c4f6183e807232330a61f"}},"3845f97935c0465294e63ff2ac289fff":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_e2ec91babbc14fa2acaec280a3f324a0","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 245M/245M [00:14&lt;00:00, 16.9MB/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_680d14a331a44cfe80054db798a0c108"}},"c79002f45eba42ca8d88be5dd4f1ff89":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"a8d9074c1b2c4f6183e807232330a61f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"e2ec91babbc14fa2acaec280a3f324a0":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"680d14a331a44cfe80054db798a0c108":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"ac029a4d75964050a17dd125ad6cfbb9":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_1aab40a99b454b6c872fe09f121a58db","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_00965761200a4fdf9c23b4d3f25fc270","IPY_MODEL_aa7b2ca872b34a1fa3eba76dbabe16f1"]}},"1aab40a99b454b6c872fe09f121a58db":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"00965761200a4fdf9c23b4d3f25fc270":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_db51522fa8df49028777ce45c66a4860","_dom_classes":[],"description":"100%","_model_name":"FloatProgressModel","bar_style":"success","max":244733649,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":244733649,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_c14c2aedf09346859d75749adc9c792f"}},"aa7b2ca872b34a1fa3eba76dbabe16f1":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_9fb3b5d6bf14413d90756405b3e895fb","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 245M/245M [00:15&lt;00:00, 16.1MB/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_ffee5262a99a4eb188ea80abf845ef85"}},"db51522fa8df49028777ce45c66a4860":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"c14c2aedf09346859d75749adc9c792f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"9fb3b5d6bf14413d90756405b3e895fb":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"ffee5262a99a4eb188ea80abf845ef85":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}}}}},"cells":[{"cell_type":"markdown","metadata":{"id":"QOXtwBxwuiO7"},"source":["# 나의 첫시도~~"]},{"cell_type":"code","metadata":{"id":"lq2nRJA_1kS8"},"source":["import numpy as np\n","import pandas as pd\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5AW4ZtcdYrNo","executionInfo":{"status":"ok","timestamp":1620268493816,"user_tz":-540,"elapsed":20980,"user":{"displayName":"jiheon Kim","photoUrl":"https://lh5.googleusercontent.com/-Z0aWZ1c8trA/AAAAAAAAAAI/AAAAAAAAABI/ZcfQ4mlzCFs/s64/photo.jpg","userId":"14698984272819109574"}},"outputId":"b7a81743-46f1-4c69-ac5e-8476764a8770"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"1karX8kt1rhR"},"source":["#data=pd.read_csv('/content/drive/Shareddrives/21-01 데마팀 화이팅/데이터셋/pre_dataset_ibu.csv')\n","#print(data.shape)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PN9e_Ny6QLk_","executionInfo":{"status":"ok","timestamp":1620268497328,"user_tz":-540,"elapsed":2390,"user":{"displayName":"jiheon Kim","photoUrl":"https://lh5.googleusercontent.com/-Z0aWZ1c8trA/AAAAAAAAAAI/AAAAAAAAABI/ZcfQ4mlzCFs/s64/photo.jpg","userId":"14698984272819109574"}},"outputId":"4495aebd-cdb1-4b71-bc31-d8c3d0231132"},"source":["df=pd.read_csv('/content/drive/Shareddrives/21-01 데마팀 화이팅/데이터셋/pre_dataset.csv', encoding='utf-8')\n","df.head(1)\n","print(df.shape)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["(1168, 18)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"NrI5lY5iIcPC"},"source":["#data.columns"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IHHLjheAShTF","executionInfo":{"status":"ok","timestamp":1620268498688,"user_tz":-540,"elapsed":670,"user":{"displayName":"jiheon Kim","photoUrl":"https://lh5.googleusercontent.com/-Z0aWZ1c8trA/AAAAAAAAAAI/AAAAAAAAABI/ZcfQ4mlzCFs/s64/photo.jpg","userId":"14698984272819109574"}},"outputId":"2b56caa2-415b-48b5-84c4-86b1df09b9a2"},"source":["df.columns"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Unnamed: 0', 'name_kor_x', 'name_eng', 'producer_kor_x',\n","       'producer_eng_x', 'region_kor', 'region_eng', 'style_kor', 'style_eng',\n","       'apv', 'ibu', 'price', 'info', 'review_eng', 'mean_average',\n","       'mean_review', 'score', 'mean_weighted'],\n","      dtype='object')"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fsRhD6MKIghX","outputId":"20708493-f7c1-4fb5-a22d-e43e92d3cbe3"},"source":["#data.isnull().sum()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Unnamed: 0          0\n","name_kor_x          0\n","name_eng            1\n","producer_kor_x      9\n","producer_eng_x      1\n","region_kor          0\n","region_eng          0\n","style_kor           0\n","style_eng           0\n","apv                 0\n","ibu                16\n","price             219\n","info               21\n","review_eng        238\n","mean_average      175\n","mean_review       221\n","score             237\n","mean_weighted     235\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"J7qsMBFXStse","executionInfo":{"status":"ok","timestamp":1620268501715,"user_tz":-540,"elapsed":723,"user":{"displayName":"jiheon Kim","photoUrl":"https://lh5.googleusercontent.com/-Z0aWZ1c8trA/AAAAAAAAAAI/AAAAAAAAABI/ZcfQ4mlzCFs/s64/photo.jpg","userId":"14698984272819109574"}},"outputId":"8f929b1f-1f6b-4a80-8c62-8ce704c2d817"},"source":["df.isnull().sum()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Unnamed: 0          0\n","name_kor_x          0\n","name_eng            1\n","producer_kor_x      9\n","producer_eng_x      1\n","region_kor          0\n","region_eng          0\n","style_kor           0\n","style_eng           0\n","apv                 0\n","ibu               276\n","price             219\n","info               21\n","review_eng        238\n","mean_average      175\n","mean_review       221\n","score             237\n","mean_weighted     235\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rlM95uwbInhL","executionInfo":{"status":"ok","timestamp":1620221832126,"user_tz":-540,"elapsed":628,"user":{"displayName":"jiheon Kim","photoUrl":"https://lh5.googleusercontent.com/-Z0aWZ1c8trA/AAAAAAAAAAI/AAAAAAAAABI/ZcfQ4mlzCFs/s64/photo.jpg","userId":"14698984272819109574"}},"outputId":"d74768cc-3358-4981-8056-8461bf975c16"},"source":["##두 글자 이하의 행 찾기 for NA 처리\n","#check=data[~(data.review_eng.str.len() <3)]\n","check = df[~(df.review_eng.str.len() <3)]\n","print(check.shape)\n","\n","#data.dropna(subset=['review_eng'], inplace=True)\n","df.dropna(subset=['review_eng'], inplace=True)\n","#print(data.shape)\n","\n","#data.reset_index(inplace=True)\n","#data.head(1)\n","df.reset_index(inplace=True)\n","df.head(1)\n","df.shape"],"execution_count":null,"outputs":[{"output_type":"stream","text":["(1164, 18)\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["(930, 19)"]},"metadata":{"tags":[]},"execution_count":27}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":241},"id":"xTh3MLJTJRZg","executionInfo":{"status":"error","timestamp":1620268504392,"user_tz":-540,"elapsed":621,"user":{"displayName":"jiheon Kim","photoUrl":"https://lh5.googleusercontent.com/-Z0aWZ1c8trA/AAAAAAAAAAI/AAAAAAAAABI/ZcfQ4mlzCFs/s64/photo.jpg","userId":"14698984272819109574"}},"outputId":"de84c585-3297-44fb-ec05-c8d51d12417e"},"source":["trial=df.loc[0,'review_eng']\n","first=trial[1:len(trial)-1] #이중리스트 해제\n","\n","import ast\n","second = ast.literal_eval(first) #이중리스트안에 각 리뷰리스트로 쪼개기\n","\n","second[0][0]  #리뷰 첫번째 \n","second[1][0]  #리뷰 두번째\n","# 이 리뷰들이 단어별로 인식되는게 아니라 한 글자씩 인식되서 tokenize해주자..?\n","\n","import nltk\n","nltk.download('punkt')\n","print(nltk.word_tokenize(second[0][0]))\n","\n","doc=second[0][0]  #이건됨\n","## doc3=nltk.word_tokenize(second[0][0]) #이건안됨 -> tokenize를 하면 안됨...\n","type(doc)\n"],"execution_count":null,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-6-bb02baaea37c>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mtrial\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mloc\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'review_eng'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mfirst\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtrial\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtrial\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;31m#이중리스트 해제\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mast\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0msecond\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mast\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mliteral_eval\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfirst\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m#이중리스트안에 각 리뷰리스트로 쪼개기\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: object of type 'float' has no len()"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":176},"id":"cw_J-mklg7sX","executionInfo":{"status":"error","timestamp":1620221220135,"user_tz":-540,"elapsed":855,"user":{"displayName":"jiheon Kim","photoUrl":"https://lh5.googleusercontent.com/-Z0aWZ1c8trA/AAAAAAAAAAI/AAAAAAAAABI/ZcfQ4mlzCFs/s64/photo.jpg","userId":"14698984272819109574"}},"outputId":"fc416e9f-2f57-42e4-c777-c00e2ca7d635"},"source":["print(second, '\\n',len(second))"],"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-9-4b177b77844f>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msecond\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'\\n'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msecond\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'second' is not defined"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dRVWXWUIcJpc","executionInfo":{"status":"ok","timestamp":1620221838435,"user_tz":-540,"elapsed":550,"user":{"displayName":"jiheon Kim","photoUrl":"https://lh5.googleusercontent.com/-Z0aWZ1c8trA/AAAAAAAAAAI/AAAAAAAAABI/ZcfQ4mlzCFs/s64/photo.jpg","userId":"14698984272819109574"}},"outputId":"8c581037-caca-4805-b974-c7687cfb5ce9"},"source":["print(doc)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["500 ml can. Pours hazy orange liquid with white head. Aroma of grapefruit and bread. The taste is slightly sweet grapefruit background weizen.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pye2wLDAcORG","executionInfo":{"status":"ok","timestamp":1620221840259,"user_tz":-540,"elapsed":1038,"user":{"displayName":"jiheon Kim","photoUrl":"https://lh5.googleusercontent.com/-Z0aWZ1c8trA/AAAAAAAAAAI/AAAAAAAAABI/ZcfQ4mlzCFs/s64/photo.jpg","userId":"14698984272819109574"}},"outputId":"a9e49aed-f5f0-4f48-aa34-2841a1d58635"},"source":["doc2=doc+' '+second[1][0]\n","print(doc2)\n","\n","doc3 = second[0][0]+' '+second[1][0]+ ' '+second[2][0]+' '+second[3][0]\n","print(doc3)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["500 ml can. Pours hazy orange liquid with white head. Aroma of grapefruit and bread. The taste is slightly sweet grapefruit background weizen. 500ml can from a supermarket in Jimei. Pours hazy reddish with a thin head. Aroma of grapefruit. Taste of grapefruit. Grapefruit finish. It does what it says on the tin!\n","500 ml can. Pours hazy orange liquid with white head. Aroma of grapefruit and bread. The taste is slightly sweet grapefruit background weizen. 500ml can from a supermarket in Jimei. Pours hazy reddish with a thin head. Aroma of grapefruit. Taste of grapefruit. Grapefruit finish. It does what it says on the tin! Can 0.5 l. Color of a red grapefruit, hazy, pinkish foam. Aroma: juicy grapefruit, grapefruit flavor. Taste: sweet, weak grapefruit, slightly sour, citruses. Pours hazy orange liquid with a tall and brief white head. Nose: grapefruit juice, soda, some malrs and bread. Liggt to medium body. Taste: lightly sweet. Grapefruit upfront. Bread, and spicy weizen background. Quite inoffensive.\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"FHYJZjZYfEmD"},"source":["# 의문?질문? \n","doc의 구성을 어떠헥 해서 넣어야 할까..?"]},{"cell_type":"markdown","metadata":{"id":"QArO-BwXXWwY"},"source":["2. Candidatae Keywords/Keyphrases"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"44YydwdmGakc","outputId":"3040e030-1dfa-45a1-8577-05723cc7eb8f"},"source":["from sklearn.feature_extraction.text import CountVectorizer\n","\n","n_gram_range = (3,3) # size of resulting candidates(keywords 개수)\n","stop_words = 'english'\n","\n","# Extract candidte words/phrases\n","count = CountVectorizer(ngram_range=n_gram_range, stop_words=stop_words).fit([doc3])\n","        \n","candidates = count.get_feature_names()\n","candidates"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['500 ml pours',\n"," '500ml supermarket jimei',\n"," 'aroma grapefruit bread',\n"," 'aroma grapefruit taste',\n"," 'aroma juicy grapefruit',\n"," 'background quite inoffensive',\n"," 'background weizen 500ml',\n"," 'body taste lightly',\n"," 'bread liggt medium',\n"," 'bread spicy weizen',\n"," 'bread taste slightly',\n"," 'brief white head',\n"," 'citruses pours hazy',\n"," 'color red grapefruit',\n"," 'does says tin',\n"," 'finish does says',\n"," 'flavor taste sweet',\n"," 'foam aroma juicy',\n"," 'grapefruit background weizen',\n"," 'grapefruit bread taste',\n"," 'grapefruit finish does',\n"," 'grapefruit flavor taste',\n"," 'grapefruit grapefruit finish',\n"," 'grapefruit grapefruit flavor',\n"," 'grapefruit hazy pinkish',\n"," 'grapefruit juice soda',\n"," 'grapefruit slightly sour',\n"," 'grapefruit taste grapefruit',\n"," 'grapefruit upfront bread',\n"," 'hazy orange liquid',\n"," 'hazy pinkish foam',\n"," 'hazy reddish head',\n"," 'head aroma grapefruit',\n"," 'head nose grapefruit',\n"," 'jimei pours hazy',\n"," 'juice soda malrs',\n"," 'juicy grapefruit grapefruit',\n"," 'liggt medium body',\n"," 'lightly sweet grapefruit',\n"," 'liquid tall brief',\n"," 'liquid white head',\n"," 'malrs bread liggt',\n"," 'medium body taste',\n"," 'ml pours hazy',\n"," 'nose grapefruit juice',\n"," 'orange liquid tall',\n"," 'orange liquid white',\n"," 'pinkish foam aroma',\n"," 'pours hazy orange',\n"," 'pours hazy reddish',\n"," 'red grapefruit hazy',\n"," 'reddish head aroma',\n"," 'says tin color',\n"," 'slightly sour citruses',\n"," 'slightly sweet grapefruit',\n"," 'soda malrs bread',\n"," 'sour citruses pours',\n"," 'spicy weizen background',\n"," 'supermarket jimei pours',\n"," 'sweet grapefruit background',\n"," 'sweet grapefruit upfront',\n"," 'sweet weak grapefruit',\n"," 'tall brief white',\n"," 'taste grapefruit grapefruit',\n"," 'taste lightly sweet',\n"," 'taste slightly sweet',\n"," 'taste sweet weak',\n"," 'tin color red',\n"," 'upfront bread spicy',\n"," 'weak grapefruit slightly',\n"," 'weizen 500ml supermarket',\n"," 'weizen background quite',\n"," 'white head aroma',\n"," 'white head nose']"]},"metadata":{"tags":[]},"execution_count":76}]},{"cell_type":"markdown","metadata":{"id":"IlwT1BOWXc0f"},"source":["3. Embeddings"]},{"cell_type":"code","metadata":{"id":"0TJnQMPeXf2h","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1620217869304,"user_tz":-540,"elapsed":7832,"user":{"displayName":"jiheon Kim","photoUrl":"https://lh5.googleusercontent.com/-Z0aWZ1c8trA/AAAAAAAAAAI/AAAAAAAAABI/ZcfQ4mlzCFs/s64/photo.jpg","userId":"14698984272819109574"}},"outputId":"fe3bbd73-5f05-4895-c6bc-8a55201fdf1a"},"source":["#!pip install sentence-transformers"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Collecting sentence-transformers\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/c4/87/49dc49e13ac107ce912c2f3f3fd92252c6d4221e88d1e6c16747044a11d8/sentence-transformers-1.1.0.tar.gz (78kB)\n","\u001b[K     |████████████████████████████████| 81kB 4.2MB/s \n","\u001b[?25hCollecting transformers<5.0.0,>=3.1.0\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/d8/b2/57495b5309f09fa501866e225c84532d1fd89536ea62406b2181933fb418/transformers-4.5.1-py3-none-any.whl (2.1MB)\n","\u001b[K     |████████████████████████████████| 2.1MB 9.5MB/s \n","\u001b[?25hRequirement already satisfied: tqdm in /usr/local/lib/python3.7/dist-packages (from sentence-transformers) (4.41.1)\n","Requirement already satisfied: torch>=1.6.0 in /usr/local/lib/python3.7/dist-packages (from sentence-transformers) (1.8.1+cu101)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from sentence-transformers) (1.19.5)\n","Requirement already satisfied: scikit-learn in /usr/local/lib/python3.7/dist-packages (from sentence-transformers) (0.22.2.post1)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.7/dist-packages (from sentence-transformers) (1.4.1)\n","Requirement already satisfied: nltk in /usr/local/lib/python3.7/dist-packages (from sentence-transformers) (3.2.5)\n","Collecting sentencepiece\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/f5/99/e0808cb947ba10f575839c43e8fafc9cc44e4a7a2c8f79c60db48220a577/sentencepiece-0.1.95-cp37-cp37m-manylinux2014_x86_64.whl (1.2MB)\n","\u001b[K     |████████████████████████████████| 1.2MB 53.9MB/s \n","\u001b[?25hRequirement already satisfied: filelock in /usr/local/lib/python3.7/dist-packages (from transformers<5.0.0,>=3.1.0->sentence-transformers) (3.0.12)\n","Requirement already satisfied: requests in /usr/local/lib/python3.7/dist-packages (from transformers<5.0.0,>=3.1.0->sentence-transformers) (2.23.0)\n","Requirement already satisfied: importlib-metadata; python_version < \"3.8\" in /usr/local/lib/python3.7/dist-packages (from transformers<5.0.0,>=3.1.0->sentence-transformers) (3.10.1)\n","Collecting tokenizers<0.11,>=0.10.1\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/ae/04/5b870f26a858552025a62f1649c20d29d2672c02ff3c3fb4c688ca46467a/tokenizers-0.10.2-cp37-cp37m-manylinux2010_x86_64.whl (3.3MB)\n","\u001b[K     |████████████████████████████████| 3.3MB 51.7MB/s \n","\u001b[?25hCollecting sacremoses\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/75/ee/67241dc87f266093c533a2d4d3d69438e57d7a90abb216fa076e7d475d4a/sacremoses-0.0.45-py3-none-any.whl (895kB)\n","\u001b[K     |████████████████████████████████| 901kB 48.8MB/s \n","\u001b[?25hRequirement already satisfied: packaging in /usr/local/lib/python3.7/dist-packages (from transformers<5.0.0,>=3.1.0->sentence-transformers) (20.9)\n","Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.7/dist-packages (from transformers<5.0.0,>=3.1.0->sentence-transformers) (2019.12.20)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from torch>=1.6.0->sentence-transformers) (3.7.4.3)\n","Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.7/dist-packages (from scikit-learn->sentence-transformers) (1.0.1)\n","Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from nltk->sentence-transformers) (1.15.0)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests->transformers<5.0.0,>=3.1.0->sentence-transformers) (2020.12.5)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests->transformers<5.0.0,>=3.1.0->sentence-transformers) (1.24.3)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests->transformers<5.0.0,>=3.1.0->sentence-transformers) (2.10)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests->transformers<5.0.0,>=3.1.0->sentence-transformers) (3.0.4)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata; python_version < \"3.8\"->transformers<5.0.0,>=3.1.0->sentence-transformers) (3.4.1)\n","Requirement already satisfied: click in /usr/local/lib/python3.7/dist-packages (from sacremoses->transformers<5.0.0,>=3.1.0->sentence-transformers) (7.1.2)\n","Requirement already satisfied: pyparsing>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging->transformers<5.0.0,>=3.1.0->sentence-transformers) (2.4.7)\n","Building wheels for collected packages: sentence-transformers\n","  Building wheel for sentence-transformers (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for sentence-transformers: filename=sentence_transformers-1.1.0-cp37-none-any.whl size=119615 sha256=8d35ea5cc0df67f46c263e2f2617c4be26b65428a4156e2fd77458db9599b0d0\n","  Stored in directory: /root/.cache/pip/wheels/84/cb/21/1066bff3027215c760ca14a198f698bca8fccb92e33e2327eb\n","Successfully built sentence-transformers\n","Installing collected packages: tokenizers, sacremoses, transformers, sentencepiece, sentence-transformers\n","Successfully installed sacremoses-0.0.45 sentence-transformers-1.1.0 sentencepiece-0.1.95 tokenizers-0.10.2 transformers-4.5.1\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"P868JNSDaL7P","colab":{"base_uri":"https://localhost:8080/","height":264,"referenced_widgets":["b06d8a9edca9495cb03c05984ebea5bb","5e62bb7c7bf24989815c3ed77a2290dc","3510d1a72aed4bb092eac55b9f016aa3","3845f97935c0465294e63ff2ac289fff","c79002f45eba42ca8d88be5dd4f1ff89","a8d9074c1b2c4f6183e807232330a61f","e2ec91babbc14fa2acaec280a3f324a0","680d14a331a44cfe80054db798a0c108"]},"executionInfo":{"status":"error","timestamp":1620217910791,"user_tz":-540,"elapsed":32153,"user":{"displayName":"jiheon Kim","photoUrl":"https://lh5.googleusercontent.com/-Z0aWZ1c8trA/AAAAAAAAAAI/AAAAAAAAABI/ZcfQ4mlzCFs/s64/photo.jpg","userId":"14698984272819109574"}},"outputId":"1d018843-3703-4e0e-a6ec-492695666d93"},"source":["from sentence_transformers import SentenceTransformer\n","\n","model = SentenceTransformer('distilbert-base-nli-mean-tokens')\n","doc_embedding = model.encode([doc3])\n","candidate_embeddings = model.encode(candidates)"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b06d8a9edca9495cb03c05984ebea5bb","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, max=244733649.0), HTML(value='')))"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n"],"name":"stdout"},{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-19-1c4f04f7d50a>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mmodel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mSentenceTransformer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'distilbert-base-nli-mean-tokens'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mdoc_embedding\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mencode\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mdoc3\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m \u001b[0mcandidate_embeddings\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mencode\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcandidates\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'candidates' is not defined"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9nqETqVebCPU","outputId":"4af4509b-c4c6-4d67-9a8b-45881480b97a"},"source":["candidate_embeddings.shape #doc ver"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(15, 768)"]},"metadata":{"tags":[]},"execution_count":66}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"44ZW3T-Bb1zk","outputId":"b78e294a-9acc-48af-f8ed-3a30caa72620"},"source":["candidate_embeddings.shape #doc2 ver"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(30, 768)"]},"metadata":{"tags":[]},"execution_count":61}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xF58XPQeh0sg","outputId":"e201ca21-d12d-4270-fb1f-1902056c396d"},"source":["candidate_embeddings.shape #doc3 ver"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(74, 768)"]},"metadata":{"tags":[]},"execution_count":78}]},{"cell_type":"markdown","metadata":{"id":"oMgrYe-DfN_l"},"source":["4. Cosin Similarity"]},{"cell_type":"code","metadata":{"id":"xHuITZNMfXEd"},"source":["from sklearn.metrics.pairwise import cosine_similarity\n","\n","top_n=5\n","distances = cosine_similarity(doc_embedding, candidate_embeddings)\n","keywords=[candidates[index] for index in distances.argsort()[0][-top_n:]]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ktWQsd9AgLDP","outputId":"39c7a8c3-a524-4aff-97d0-74e91b87eb42"},"source":["keywords #doc ver"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['head aroma grapefruit',\n"," 'sweet grapefruit background',\n"," 'slightly sweet grapefruit',\n"," 'aroma grapefruit bread',\n"," 'grapefruit bread taste']"]},"metadata":{"tags":[]},"execution_count":68}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mM1T5YhxfwSB","outputId":"1bf2501c-01d6-4e58-ea7b-401a3546cb21"},"source":["keywords #doc2 ver"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['taste grapefruit grapefruit',\n"," 'grapefruit taste grapefruit',\n"," 'grapefruit grapefruit finish',\n"," 'aroma grapefruit bread',\n"," 'grapefruit bread taste']"]},"metadata":{"tags":[]},"execution_count":63}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5ACqYFOyh9oA","outputId":"037dd36e-dd8e-4c2e-9a2b-b7a02ab98093"},"source":["keywords #doc3 ver"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['lightly sweet grapefruit',\n"," 'grapefruit hazy pinkish',\n"," 'aroma juicy grapefruit',\n"," 'grapefruit bread taste',\n"," 'juicy grapefruit grapefruit']"]},"metadata":{"tags":[]},"execution_count":80}]},{"cell_type":"code","metadata":{"id":"PaolF8W-k9QX"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"TDllME4rgmz6"},"source":["5. Diversification\n","- Max Sum Similarity\n","\n","maximize the candidate similarity to the document whilst minimizing the similarity between candidates"]},{"cell_type":"code","metadata":{"id":"GwxMQ6ADgmik"},"source":["import numpy as np\n","import itertools\n","\n","def max_sum_sim(doc_embedding, word_embeddings, words, top_n, nr_candidates):\n","  #Calculate distances and extract keywords\n","  distances = cosine_similarity(doc_embedding, candidate_embeddings)\n","  distances_candidates = cosine_similarity(candidate_embeddings,\n","                                           candidate_embeddings)\n","  \n","  #Get top_n words as candidates based on cosine similarity\n","  words_idx = list(distances.argsort()[0][-nr_candidates:])\n","  words_vals = [candidates[index] for index in words_idx]\n","  distances_candidates = distances_candidates[np.ix_(words_idx, words_idx)]\n","\n","  #Calculate the combination of words that are the least similar to each other \n","  min_sim = np.inf\n","  candidate = None\n","  for combination in itertools.combinations(range(len(words_idx)), top_n):\n","    sim = sum([distances_candidates[i][j] for i in combination for j in combination if i != j])\n","    if sim < min_sim:\n","      candidate = combination\n","      min_sim = sim\n","      \n","  return [words_vals[idx] for idx in candidate]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":186},"id":"odGcnArTkqND","outputId":"38926a1d-127f-45a4-a679-f9adac2d4568"},"source":["max_sum_sim(doc_embedding, candidate_embeddings,\n","            candidates, top_n=3, nr_candidates=20)"],"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-37-050735a46316>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m max_sum_sim(doc_embedding, candidate_embeddings,\n\u001b[0m\u001b[1;32m      2\u001b[0m             candidates, top_n=3, nr_candidates=20)\n","\u001b[0;31mNameError\u001b[0m: name 'max_sum_sim' is not defined"]}]},{"cell_type":"markdown","metadata":{"id":"rVCQAJbamMTI"},"source":["- Maximal Marginal Relevance\n","\n","minimize redundancy and maximize the diversity of results in text summarization tasks"]},{"cell_type":"code","metadata":{"id":"BM5D_s13l-cD"},"source":["import numpy as np\n","\n","def mmr(doc_embedding, word_embeddings, words, top_n, diversity):\n","\n","    # Extract similarity within words, and between words and the document\n","    word_doc_similarity = cosine_similarity(word_embeddings, doc_embedding)\n","    word_similarity = cosine_similarity(word_embeddings)\n","\n","    # Initialize candidates and already choose best keyword/keyphras\n","    keywords_idx = [np.argmax(word_doc_similarity)]\n","    candidates_idx = [i for i in range(len(words)) if i != keywords_idx[0]]\n","\n","    for _ in range(top_n - 1):\n","        # Extract similarities within candidates and\n","        # between candidates and selected keywords/phrases\n","        candidate_similarities = word_doc_similarity[candidates_idx, :]\n","        target_similarities = np.max(word_similarity[candidates_idx][:, keywords_idx], axis=1)\n","\n","        # Calculate MMR\n","        mmr = (1-diversity) * candidate_similarities - diversity * target_similarities.reshape(-1, 1)\n","        mmr_idx = candidates_idx[np.argmax(mmr)]\n","\n","        # Update keywords & candidates\n","        keywords_idx.append(mmr_idx)\n","        candidates_idx.remove(mmr_idx)\n","\n","    return [words[idx] for idx in keywords_idx]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yg7yW0KQmVi0","outputId":"4bbb3adf-0b80-457d-e106-b6458fb41bed"},"source":["mmr(doc_embedding, candidate_embeddings, candidates, top_n=3, diversity=0.2)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['juicy grapefruit grapefruit',\n"," 'grapefruit hazy pinkish',\n"," 'grapefruit bread taste',\n"," 'aroma juicy grapefruit',\n"," 'lightly sweet grapefruit']"]},"metadata":{"tags":[]},"execution_count":99}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nCyn2ONhm45x","outputId":"56e7a403-89f3-440b-917c-5deab65353e1"},"source":["mmr(doc_embedding, candidate_embeddings, candidates, top_n=3, diversity=0.5)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['juicy grapefruit grapefruit',\n"," 'weizen 500ml supermarket',\n"," 'bread spicy weizen',\n"," 'juice soda malrs',\n"," 'slightly sour citruses']"]},"metadata":{"tags":[]},"execution_count":101}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Cf6ACZoCm0q7","outputId":"39f748c9-6f33-4698-f0e9-245b32f429d1"},"source":["mmr(doc_embedding, candidate_embeddings, candidates, top_n=3, diversity=0.7)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['juicy grapefruit grapefruit',\n"," '500ml supermarket jimei',\n"," 'pours hazy reddish',\n"," 'soda malrs bread',\n"," 'white head aroma']"]},"metadata":{"tags":[]},"execution_count":100}]},{"cell_type":"code","metadata":{"id":"w6ojEHc5mktJ"},"source":["['grapefruit slightly sour',\n"," 'bread spicy weizen',\n"," 'red grapefruit hazy',\n"," 'grapefruit grapefruit finish',\n"," 'grapefruit juice soda']"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"fOE7zl3_uu0R"},"source":["# 완벽을 향해 나아가보자"]},{"cell_type":"code","metadata":{"id":"xYAji611ux0P"},"source":["import pandas as pd\n","import numpy as np"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NfI4S2N_vMAF","executionInfo":{"status":"ok","timestamp":1620268512879,"user_tz":-540,"elapsed":1203,"user":{"displayName":"jiheon Kim","photoUrl":"https://lh5.googleusercontent.com/-Z0aWZ1c8trA/AAAAAAAAAAI/AAAAAAAAABI/ZcfQ4mlzCFs/s64/photo.jpg","userId":"14698984272819109574"}},"outputId":"ab77ff5f-3658-4c3f-bbe9-972765292137"},"source":["df=pd.read_csv('/content/drive/Shareddrives/21-01 데마팀 화이팅/데이터셋/찐최종+도수범주추가.csv', encoding='CP949')\n","#df.head(1)\n","print(df.shape)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["(1168, 21)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"egkesx0ZvXY7","executionInfo":{"status":"ok","timestamp":1620268514996,"user_tz":-540,"elapsed":594,"user":{"displayName":"jiheon Kim","photoUrl":"https://lh5.googleusercontent.com/-Z0aWZ1c8trA/AAAAAAAAAAI/AAAAAAAAABI/ZcfQ4mlzCFs/s64/photo.jpg","userId":"14698984272819109574"}},"outputId":"654e5396-d2c0-4911-8238-80418e3492e3"},"source":["df.isnull().sum()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Unnamed: 0          0\n","V1                  0\n","name_kor_x          0\n","name_eng            1\n","producer_kor_x      9\n","producer_eng_x      1\n","region_kor          0\n","region_eng          0\n","style_kor           0\n","style_eng           0\n","apv                 3\n","ibu                20\n","price             219\n","종류                311\n","info               21\n","review_eng        238\n","mean_average      175\n","mean_review       221\n","score             237\n","mean_weighted     235\n","apv_category        3\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hpPm60PcvdiC","executionInfo":{"status":"ok","timestamp":1620268516003,"user_tz":-540,"elapsed":455,"user":{"displayName":"jiheon Kim","photoUrl":"https://lh5.googleusercontent.com/-Z0aWZ1c8trA/AAAAAAAAAAI/AAAAAAAAABI/ZcfQ4mlzCFs/s64/photo.jpg","userId":"14698984272819109574"}},"outputId":"240aeacf-975c-465a-e699-3deb951aa60c"},"source":["df.dropna(subset=['review_eng'], inplace=True) # 결측치 제거\n","df.reset_index(inplace=True)\n","df.isnull().sum()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["index               0\n","Unnamed: 0          0\n","V1                  0\n","name_kor_x          0\n","name_eng            0\n","producer_kor_x      9\n","producer_eng_x      1\n","region_kor          0\n","region_eng          0\n","style_kor           0\n","style_eng           0\n","apv                 2\n","ibu                12\n","price             173\n","종류                257\n","info               21\n","review_eng          0\n","mean_average       29\n","mean_review        53\n","score              54\n","mean_weighted      53\n","apv_category        2\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"code","metadata":{"id":"08kADmGqbS7N","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1620268517644,"user_tz":-540,"elapsed":705,"user":{"displayName":"jiheon Kim","photoUrl":"https://lh5.googleusercontent.com/-Z0aWZ1c8trA/AAAAAAAAAAI/AAAAAAAAABI/ZcfQ4mlzCFs/s64/photo.jpg","userId":"14698984272819109574"}},"outputId":"c65b9b67-f762-4da8-96bf-d31962b8f0be"},"source":["df = df[~(df.review_eng.str.len() <5)]\n","print(df.shape)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["(904, 22)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"qczOFVeXexyb"},"source":["df.reset_index(inplace=True)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"4Yn7enldCXmc","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1620268549453,"user_tz":-540,"elapsed":9873,"user":{"displayName":"jiheon Kim","photoUrl":"https://lh5.googleusercontent.com/-Z0aWZ1c8trA/AAAAAAAAAAI/AAAAAAAAABI/ZcfQ4mlzCFs/s64/photo.jpg","userId":"14698984272819109574"}},"outputId":"3c649835-3e86-458d-c1fd-e1566294f139"},"source":["!pip install sentence-transformers"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Collecting sentence-transformers\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/c4/87/49dc49e13ac107ce912c2f3f3fd92252c6d4221e88d1e6c16747044a11d8/sentence-transformers-1.1.0.tar.gz (78kB)\n","\u001b[K     |████████████████████████████████| 81kB 6.4MB/s \n","\u001b[?25hCollecting transformers<5.0.0,>=3.1.0\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/d8/b2/57495b5309f09fa501866e225c84532d1fd89536ea62406b2181933fb418/transformers-4.5.1-py3-none-any.whl (2.1MB)\n","\u001b[K     |████████████████████████████████| 2.1MB 29.9MB/s \n","\u001b[?25hRequirement already satisfied: tqdm in /usr/local/lib/python3.7/dist-packages (from sentence-transformers) (4.41.1)\n","Requirement already satisfied: torch>=1.6.0 in /usr/local/lib/python3.7/dist-packages (from sentence-transformers) (1.8.1+cu101)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from sentence-transformers) (1.19.5)\n","Requirement already satisfied: scikit-learn in /usr/local/lib/python3.7/dist-packages (from sentence-transformers) (0.22.2.post1)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.7/dist-packages (from sentence-transformers) (1.4.1)\n","Requirement already satisfied: nltk in /usr/local/lib/python3.7/dist-packages (from sentence-transformers) (3.2.5)\n","Collecting sentencepiece\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/f5/99/e0808cb947ba10f575839c43e8fafc9cc44e4a7a2c8f79c60db48220a577/sentencepiece-0.1.95-cp37-cp37m-manylinux2014_x86_64.whl (1.2MB)\n","\u001b[K     |████████████████████████████████| 1.2MB 39.5MB/s \n","\u001b[?25hCollecting tokenizers<0.11,>=0.10.1\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/ae/04/5b870f26a858552025a62f1649c20d29d2672c02ff3c3fb4c688ca46467a/tokenizers-0.10.2-cp37-cp37m-manylinux2010_x86_64.whl (3.3MB)\n","\u001b[K     |████████████████████████████████| 3.3MB 37.7MB/s \n","\u001b[?25hRequirement already satisfied: importlib-metadata; python_version < \"3.8\" in /usr/local/lib/python3.7/dist-packages (from transformers<5.0.0,>=3.1.0->sentence-transformers) (3.10.1)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.7/dist-packages (from transformers<5.0.0,>=3.1.0->sentence-transformers) (3.0.12)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.7/dist-packages (from transformers<5.0.0,>=3.1.0->sentence-transformers) (20.9)\n","Requirement already satisfied: requests in /usr/local/lib/python3.7/dist-packages (from transformers<5.0.0,>=3.1.0->sentence-transformers) (2.23.0)\n","Collecting sacremoses\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/75/ee/67241dc87f266093c533a2d4d3d69438e57d7a90abb216fa076e7d475d4a/sacremoses-0.0.45-py3-none-any.whl (895kB)\n","\u001b[K     |████████████████████████████████| 901kB 20.7MB/s \n","\u001b[?25hRequirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.7/dist-packages (from transformers<5.0.0,>=3.1.0->sentence-transformers) (2019.12.20)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from torch>=1.6.0->sentence-transformers) (3.7.4.3)\n","Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.7/dist-packages (from scikit-learn->sentence-transformers) (1.0.1)\n","Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from nltk->sentence-transformers) (1.15.0)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata; python_version < \"3.8\"->transformers<5.0.0,>=3.1.0->sentence-transformers) (3.4.1)\n","Requirement already satisfied: pyparsing>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging->transformers<5.0.0,>=3.1.0->sentence-transformers) (2.4.7)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests->transformers<5.0.0,>=3.1.0->sentence-transformers) (2.10)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests->transformers<5.0.0,>=3.1.0->sentence-transformers) (1.24.3)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests->transformers<5.0.0,>=3.1.0->sentence-transformers) (3.0.4)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests->transformers<5.0.0,>=3.1.0->sentence-transformers) (2020.12.5)\n","Requirement already satisfied: click in /usr/local/lib/python3.7/dist-packages (from sacremoses->transformers<5.0.0,>=3.1.0->sentence-transformers) (7.1.2)\n","Building wheels for collected packages: sentence-transformers\n","  Building wheel for sentence-transformers (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for sentence-transformers: filename=sentence_transformers-1.1.0-cp37-none-any.whl size=119615 sha256=a836321645aa4889108115930b16faa978860447878af9a0337d64b8bde88db0\n","  Stored in directory: /root/.cache/pip/wheels/84/cb/21/1066bff3027215c760ca14a198f698bca8fccb92e33e2327eb\n","Successfully built sentence-transformers\n","Installing collected packages: tokenizers, sacremoses, transformers, sentencepiece, sentence-transformers\n","Successfully installed sacremoses-0.0.45 sentence-transformers-1.1.0 sentencepiece-0.1.95 tokenizers-0.10.2 transformers-4.5.1\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":124},"id":"CC3RzBkIcfJ6","executionInfo":{"status":"ok","timestamp":1620268521800,"user_tz":-540,"elapsed":591,"user":{"displayName":"jiheon Kim","photoUrl":"https://lh5.googleusercontent.com/-Z0aWZ1c8trA/AAAAAAAAAAI/AAAAAAAAABI/ZcfQ4mlzCFs/s64/photo.jpg","userId":"14698984272819109574"}},"outputId":"89edc207-5833-47d1-edd7-a0749af69fca"},"source":["df.iloc[160][-6]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["\"[['Pours a dark brown beer, aroma is liquorice, dark malts, peat and smoke. Taste is smoke, peat, iodine, dark malts, bitter and meaty. Pretty good'],['Murky dark brown, lasting off-white to tan head. Spicy aroma, light chocolate, dark bread, fruit, slightly tart dried dark fruit, light smoky touch, some herbal and grassy hops. Quite rich, dark malts, spice, hoppy finish, light bitterness, good balance. Creamy texture, soft, medium body, soft carbonation, moderately lasting finish. Not spectacular, but nicely soft and creamy with a hoppy touch among the rest.'],['Oddly both on the dry side and very drinkable. A good porter, and probaby should have had sooner than five years after being the redux. Then saw many others did the same.'],['Creamy lightbrown excellent fully lasting head. Black colour. Heavy malty and hoppy aroma. Heavy bitter flavor. Long heavy bitter finish. Creamy palate. Fantastic.'],['It's all things at once, there's an underlaying nagging bitterness, then there's a smokey top note, and the mouthfeel is quite full and creamy, I really don't know what to think. That bitterness is very persistent and lingering.'],['Dark amber with off white head - Malt aroma with some smoke - Malt body with some notes of smoke and chocolate - Malt goes into the finish with some smoke - This was good'],['POURS on opaque dark brown (fairly black) with some lighter colored tinges at the very top, and with a half finger of light tan foam. AROMA of ashy campfire-smoked leather, hard roasted dark malts, roasted nuts, and mild chocolate and coffee. FLAVOR of sharp ashiness, burnt oak stump, black coffee (lower quality), bitter chocolate, and hints of dark fruit. Finishes mostly astringently ashy and burnt -- could benefit from a bit of sweetness. Perhaps I waited to long to open this one up and the smoked aspect took over?'],['Pitch black with a brown head. Choco malt nose. Light smoke. Body is creamy, chocolate malt dominant, coffee, some light smoke touches. Good stuff.'],['Pours black. Smoke, smoked meat, plum, wood, cherry, chocolate. Medium body. Decent.'],['Like completing a double flip off the swings as a kid, only to land face first in the bark chips; I'm pretty happy, but i can mainly taste timber.'],['thank you very much for sharing, kapusil! dark brown colour, medium sized beige head; aroma and taste of cocoa, some vanilla, woody notes, dried fruits, coffee and caramel; great one!'],['Pitch black body with a light brown head. Aroma and taste of vanilla, coffee, cocoa, smoke and floral hops. Very nice.'],['with a nice beige head offering some retention and lacing. tonsof spicy conifers, super dark red fruitiness, some smoked hops, molasses sweetness, relatively clean and very fruity yeast action. moderate to low carbonation, medium body - oily; semi-sweet yet drying if not potent spicy-resinous finish. big porter, not so much unbalanced.']]\""]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NGUejJz8RFza","executionInfo":{"status":"ok","timestamp":1620268533512,"user_tz":-540,"elapsed":2150,"user":{"displayName":"jiheon Kim","photoUrl":"https://lh5.googleusercontent.com/-Z0aWZ1c8trA/AAAAAAAAAAI/AAAAAAAAABI/ZcfQ4mlzCFs/s64/photo.jpg","userId":"14698984272819109574"}},"outputId":"4beb59b4-cac2-47f3-88a9-6e3be6a94afc"},"source":["import nltk\n","nltk.download('stopwords')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Unzipping corpora/stopwords.zip.\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{"tags":[]},"execution_count":14}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":760,"referenced_widgets":["ac029a4d75964050a17dd125ad6cfbb9","1aab40a99b454b6c872fe09f121a58db","00965761200a4fdf9c23b4d3f25fc270","aa7b2ca872b34a1fa3eba76dbabe16f1","db51522fa8df49028777ce45c66a4860","c14c2aedf09346859d75749adc9c792f","9fb3b5d6bf14413d90756405b3e895fb","ffee5262a99a4eb188ea80abf845ef85"]},"id":"_WYaoQvIvg_g","outputId":"a3a086c4-6d6c-4443-b256-d49e6324cffa"},"source":["from sklearn.feature_extraction.text import CountVectorizer\n","n_gram_range = (3,3) # size of resulting candidates(keywords 개수)\n","\n","from sentence_transformers import SentenceTransformer\n","model = SentenceTransformer('distilbert-base-nli-mean-tokens')\n","\n","from sklearn.metrics.pairwise import cosine_similarity\n","\n","#Diversification\n","##Max Sum Similarity\n","import itertools\n","def max_sum_sim(doc_embedding, word_embeddings, words, top_n, nr_candidates):\n","  #Calculate distances and extract keywords\n","  distances = cosine_similarity(doc_embedding, candidate_embeddings)\n","  distances_candidates = cosine_similarity(candidate_embeddings,\n","                                           candidate_embeddings)\n","  \n","  #Get top_n words as candidates based on cosine similarity\n","  words_idx = list(distances.argsort()[0][-nr_candidates:])\n","  words_vals = [candidates[index] for index in words_idx]\n","  distances_candidates = distances_candidates[np.ix_(words_idx, words_idx)]\n","\n","  #Calculate the combination of words that are the least similar to each other \n","  min_sim = np.inf\n","  candidate = None\n","  for combination in itertools.combinations(range(len(words_idx)), top_n):\n","    sim = sum([distances_candidates[i][j] for i in combination for j in combination if i != j])\n","    if sim < min_sim:\n","      candidate = combination\n","      min_sim = sim\n","      #여기 에러 나서 유나가 error raising exception 처리해줌 (0428 17:00)\n","      return [words_vals[idx] for idx in candidate]\n","    else:\n","      return None\n","\n","mss = []\n","\n","##Maximal Marginal Relevance\n","def mmr(doc_embedding, word_embeddings, words, top_n, diversity):\n","\n","    # Extract similarity within words, and between words and the document\n","    word_doc_similarity = cosine_similarity(word_embeddings, doc_embedding)\n","    word_similarity = cosine_similarity(word_embeddings)\n","\n","    # Initialize candidates and already choose best keyword/keyphras\n","    keywords_idx = [np.argmax(word_doc_similarity)]\n","    candidates_idx = [i for i in range(len(words)) if i != keywords_idx[0]]\n","\n","    for _ in range(top_n - 1):\n","        # Extract similarities within candidates and\n","        # between candidates and selected keywords/phrases\n","        candidate_similarities = word_doc_similarity[candidates_idx, :]\n","        target_similarities = np.max(word_similarity[candidates_idx][:, keywords_idx], axis=1)\n","\n","        # Calculate MMR\n","        mmr = (1-diversity) * candidate_similarities - diversity * target_similarities.reshape(-1, 1)\n","        mmr_idx = candidates_idx[np.argmax(mmr)]\n","\n","        # Update keywords & candidates\n","        keywords_idx.append(mmr_idx)\n","        candidates_idx.remove(mmr_idx)\n","\n","    return [words[idx] for idx in keywords_idx]\n","mmrel = []\n","\n","##for문 시작\n","for i in range(len(df['review_eng'])) :\n","  rev=df.loc[i,'review_eng'] #맥주별 리뷰 이중리스트 형태로 불러오기\n","  rev = rev[1:len(rev)-1] #이중리스트 해체\n","  rev = rev.replace('\\n',' ').replace('[','').replace(']','') # 줄바꿈을 찾아서 공백으로 변환\n","  doc = rev[1:len(rev)-1]\n","  #print(doc)\n","  \n","  if i%20==0:\n","      print(\"currently on:\",i)\n","  #Candidatae Keywords/Keyphrases\n","  #Extract candidate words/phrases\n","  try:\n","    count = CountVectorizer(ngram_range=n_gram_range, stop_words='english').fit([doc])\n","    candidates = count.get_feature_names()\n","\n","    #Embeddings\n","    doc_embedding = model.encode([doc])\n","    candidate_embeddings = model.encode(candidates)\n","    \n","    #Cosin Similarity\n","    top_n=3\n","    distances = cosine_similarity(doc_embedding, candidate_embeddings)\n","    keywords=[candidates[index] for index in distances.argsort()[0][-top_n:]]\n","\n","    #Diversification\n","    ##Max Sum Similarity\n","    max=max_sum_sim(doc_embedding, candidate_embeddings,candidates, top_n=3, nr_candidates=20)\n","    mss.append(max)\n","\n","    ##Maximal Marginal Relevance\n","    maximal=mmr(doc_embedding, candidate_embeddings, candidates, top_n=3, diversity=0.5)\n","    mmrel.append(maximal)\n","\n","  except ValueError:\n","    print(\"%dth raising countvectorizer problem\"%i)\n","    mmrel.append(None)\n","    pass\n","df['mss']=mss\n","df['mmr']=mmrel\n","\n","df.head(1)\n","\n","  \n","\n"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ac029a4d75964050a17dd125ad6cfbb9","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, max=244733649.0), HTML(value='')))"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n","currently on: 0\n","currently on: 20\n","currently on: 40\n","currently on: 60\n","currently on: 80\n","currently on: 100\n","currently on: 120\n","currently on: 140\n","currently on: 160\n","currently on: 180\n","currently on: 200\n","currently on: 220\n","currently on: 240\n","247th raising countvectorizer problem\n","currently on: 260\n","currently on: 280\n","currently on: 300\n","currently on: 320\n","currently on: 340\n","currently on: 360\n","currently on: 380\n","currently on: 400\n","currently on: 420\n","currently on: 440\n","currently on: 460\n","currently on: 480\n","currently on: 500\n","currently on: 520\n","currently on: 540\n","currently on: 560\n","currently on: 580\n","588th raising countvectorizer problem\n","currently on: 600\n","currently on: 620\n","currently on: 640\n","currently on: 660\n","currently on: 680\n","currently on: 700\n","currently on: 720\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SpYIo-CUjDOS","executionInfo":{"status":"ok","timestamp":1620218528898,"user_tz":-540,"elapsed":636,"user":{"displayName":"jiheon Kim","photoUrl":"https://lh5.googleusercontent.com/-Z0aWZ1c8trA/AAAAAAAAAAI/AAAAAAAAABI/ZcfQ4mlzCFs/s64/photo.jpg","userId":"14698984272819109574"}},"outputId":"19a4f6d0-9d50-49d0-ce41-fb4dd038049d"},"source":["df['mss']"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0      [grapefruit juice soda, grapefruit background ...\n","1      [fizzy carbonation taste, sugar slightly refre...\n","2      [malts caramel hint, slightly chocolate roaste...\n","3      [evolves sweeter cookies, tangerine floral tas...\n","4      [honey slightly floral, moderate sweetness bal...\n","                             ...                        \n","899    [lightly toasted malts, sweet fruitiness peach...\n","900    [nose roasted vanilla, chocolate vanilla figs,...\n","901    [fruits vinous chocolate, sweet booziness malt...\n","902    [bitterness acid medium, nose roast chocolate,...\n","903    [amber head aroma, body soft carbonation, subt...\n","Name: mss, Length: 904, dtype: object"]},"metadata":{"tags":[]},"execution_count":39}]},{"cell_type":"code","metadata":{"id":"ukBB94cSkEQ_"},"source":["from sentence_transformers import SentenceTransformer"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"5qoCSLJNjI8A"},"source":["df.to_csv('/content/drive/Shareddrives/21-01 데마팀 화이팅/데이터셋/bert.csv',encoding='utf-8-sig')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"qNbdSplMi55N"},"source":["# 휴지통"]},{"cell_type":"code","metadata":{"id":"WeiAHkuU4W9R"},"source":["from sklearn.feature_extraction.text import CountVectorizer\n","\n","n_gram_range = (3,3) # size of resulting candidates(keywords 개수)\n","stop_words = 'english'\n","\n","# Extract candidte words/phrases\n","count = CountVectorizer(ngram_range=n_gram_range, stop_words=stop_words).fit([doc3])\n","        \n","candidates = count.get_feature_names()\n","candidates\n","\n","from sentence_transformers import SentenceTransformer\n","\n","model = SentenceTransformer('distilbert-base-nli-mean-tokens')\n","doc_embedding = model.encode([doc3])\n","candidate_embeddings = model.encode(candidates)\n","candidate_embeddings.shape\n","\n","from sklearn.metrics.pairwise import cosine_similarity\n","\n","top_n=5\n","distances = cosine_similarity(doc_embedding, candidate_embeddings)\n","keywords=[candidates[index] for index in distances.argsort()[0][-top_n:]]\n","keywords\n","\n","\n","import numpy as np\n","import itertools\n","\n","def max_sum_sim(doc_embedding, word_embeddings, words, top_n, nr_candidates):\n","  #Calculate distances and extract keywords\n","  distances = cosine_similarity(doc_embedding, candidate_embeddings)\n","  distances_candidates = cosine_similarity(candidate_embeddings,\n","                                           candidate_embeddings)\n","  \n","  #Get top_n words as candidates based on cosine similarity\n","  words_idx = list(distances.argsort()[0][-nr_candidates:])\n","  words_vals = [candidates[index] for index in words_idx]\n","  distances_candidates = distances_candidates[np.ix_(words_idx, words_idx)]\n","\n","  #Calculate the combination of words that are the least similar to each other \n","  min_sim = np.inf\n","  candidate = None\n","  for combination in itertools.combinations(range(len(words_idx)), top_n):\n","    sim = sum([distances_candidates[i][j] for i in combination for j in combination if i != j])\n","    if sim < min_sim:\n","      candidate = combination\n","      min_sim = sim\n","      \n","  return [words_vals[idx] for idx in candidate]\n","\n","max_sum_sim(doc_embedding, candidate_embeddings,\n","            candidates, top_n=3, nr_candidates=20)\n","\n","\n","import numpy as np\n","\n","def mmr(doc_embedding, word_embeddings, words, top_n, diversity):\n","\n","    # Extract similarity within words, and between words and the document\n","    word_doc_similarity = cosine_similarity(word_embeddings, doc_embedding)\n","    word_similarity = cosine_similarity(word_embeddings)\n","\n","    # Initialize candidates and already choose best keyword/keyphras\n","    keywords_idx = [np.argmax(word_doc_similarity)]\n","    candidates_idx = [i for i in range(len(words)) if i != keywords_idx[0]]\n","\n","    for _ in range(top_n - 1):\n","        # Extract similarities within candidates and\n","        # between candidates and selected keywords/phrases\n","        candidate_similarities = word_doc_similarity[candidates_idx, :]\n","        target_similarities = np.max(word_similarity[candidates_idx][:, keywords_idx], axis=1)\n","\n","        # Calculate MMR\n","        mmr = (1-diversity) * candidate_similarities - diversity * target_similarities.reshape(-1, 1)\n","        mmr_idx = candidates_idx[np.argmax(mmr)]\n","\n","        # Update keywords & candidates\n","        keywords_idx.append(mmr_idx)\n","        candidates_idx.remove(mmr_idx)\n","\n","    return [words[idx] for idx in keywords_idx]\n","\n","mmr(doc_embedding, candidate_embeddings, candidates, top_n=3, diversity=0.2)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ZEo9oiYw6Mj8"},"source":["for문 쪼개기"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kgMxwgUt0aFO","outputId":"d1785235-dd83-4045-b63e-ddc38b6c0d7c"},"source":["rev = df.loc[0,'review_eng']\n","rev = rev[1:len(rev)-1]\n","rev = rev.replace('\\n',' ').replace('[','').replace(']','')\n","rev = rev[1:len(rev)-1]\n","#rev=rev.split(sep=\"'\")\n","#rev = rev.replace(\"'\",'').replace(',','')\n","rev[0]\n","#print(type(rev))\n","\n","import nltk\n","nltk.download('punkt')\n","doc=nltk.word_tokenize(rev)\n","doc"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Package punkt is already up-to-date!\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["['500',\n"," 'ml',\n"," 'can',\n"," '.',\n"," 'Pours',\n"," 'hazy',\n"," 'orange',\n"," 'liquid',\n"," 'with',\n"," 'white',\n"," 'head',\n"," '.',\n"," 'Aroma',\n"," 'of',\n"," 'grapefruit',\n"," 'and',\n"," 'bread',\n"," '.',\n"," 'The',\n"," 'taste',\n"," 'is',\n"," 'slightly',\n"," 'sweet',\n"," 'grapefruit',\n"," 'background',\n"," 'weizen',\n"," '.',\n"," \"'\",\n"," ',',\n"," \"'500ml\",\n"," 'can',\n"," 'from',\n"," 'a',\n"," 'supermarket',\n"," 'in',\n"," 'Jimei',\n"," '.',\n"," 'Pours',\n"," 'hazy',\n"," 'reddish',\n"," 'with',\n"," 'a',\n"," 'thin',\n"," 'head',\n"," '.',\n"," 'Aroma',\n"," 'of',\n"," 'grapefruit',\n"," '.',\n"," 'Taste',\n"," 'of',\n"," 'grapefruit',\n"," '.',\n"," 'Grapefruit',\n"," 'finish',\n"," '.',\n"," 'It',\n"," 'does',\n"," 'what',\n"," 'it',\n"," 'says',\n"," 'on',\n"," 'the',\n"," 'tin',\n"," '!',\n"," \"'\",\n"," ',',\n"," \"'Can\",\n"," '0.5',\n"," 'l.',\n"," 'Color',\n"," 'of',\n"," 'a',\n"," 'red',\n"," 'grapefruit',\n"," ',',\n"," 'hazy',\n"," ',',\n"," 'pinkish',\n"," 'foam',\n"," '.',\n"," 'Aroma',\n"," ':',\n"," 'juicy',\n"," 'grapefruit',\n"," ',',\n"," 'grapefruit',\n"," 'flavor',\n"," '.',\n"," 'Taste',\n"," ':',\n"," 'sweet',\n"," ',',\n"," 'weak',\n"," 'grapefruit',\n"," ',',\n"," 'slightly',\n"," 'sour',\n"," ',',\n"," 'citruses',\n"," '.',\n"," \"'\",\n"," ',',\n"," \"'Pours\",\n"," 'hazy',\n"," 'orange',\n"," 'liquid',\n"," 'with',\n"," 'a',\n"," 'tall',\n"," 'and',\n"," 'brief',\n"," 'white',\n"," 'head',\n"," '.',\n"," 'Nose',\n"," ':',\n"," 'grapefruit',\n"," 'juice',\n"," ',',\n"," 'soda',\n"," ',',\n"," 'some',\n"," 'malrs',\n"," 'and',\n"," 'bread',\n"," '.',\n"," 'Liggt',\n"," 'to',\n"," 'medium',\n"," 'body',\n"," '.',\n"," 'Taste',\n"," ':',\n"," 'lightly',\n"," 'sweet',\n"," '.',\n"," 'Grapefruit',\n"," 'upfront',\n"," '.',\n"," 'Bread',\n"," ',',\n"," 'and',\n"," 'spicy',\n"," 'weizen',\n"," 'background',\n"," '.',\n"," 'Quite',\n"," 'inoffensive',\n"," '.']"]},"metadata":{"tags":[]},"execution_count":20}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yxUUzgIOxdZx","outputId":"4b828d93-d201-4bbb-a21c-1fd7e6ac7446"},"source":["s[0]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[\"['500 ml can. Pours hazy orange liquid with white head. Aroma of grapefruit and bread. The taste is slightly sweet grapefruit background weizen.'\",\n"," \" ['500ml can from a supermarket in Jimei. Pours hazy reddish with a thin head. Aroma of grapefruit. Taste of grapefruit. Grapefruit finish. It does what it says on the tin!'\",\n"," \"['Can 0.5 l. Color of a red grapefruit, hazy, pinkish foam. Aroma: juicy grapefruit, grapefruit flavor. Taste: sweet, weak grapefruit, slightly sour, citruses.'\",\n"," \"['Pours hazy orange liquid with a tall and brief white head. Nose: grapefruit juice, soda, some malrs and bread. Liggt to medium body. Taste: lightly sweet. Grapefruit upfront. Bread, and spicy weizen background. Quite inoffensive.']\"]"]},"metadata":{"tags":[]},"execution_count":17}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0JcblZ6H0Ksm","outputId":"346a3085-bab9-42e0-ee6c-b6f9da420bb0"},"source":["print(s[0][0],'\\n',s[0][1])"],"execution_count":null,"outputs":[{"output_type":"stream","text":["['500 ml can. Pours hazy orange liquid with white head. Aroma of grapefruit and bread. The taste is slightly sweet grapefruit background weizen.' \n","  ['500ml can from a supermarket in Jimei. Pours hazy reddish with a thin head. Aroma of grapefruit. Taste of grapefruit. Grapefruit finish. It does what it says on the tin!'\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5bNqD-XGr1UW","executionInfo":{"status":"ok","timestamp":1620271155538,"user_tz":-540,"elapsed":4825,"user":{"displayName":"jiheon Kim","photoUrl":"https://lh5.googleusercontent.com/-Z0aWZ1c8trA/AAAAAAAAAAI/AAAAAAAAABI/ZcfQ4mlzCFs/s64/photo.jpg","userId":"14698984272819109574"}},"outputId":"64fe9eb0-8f42-48aa-fcea-e4732fc4e37a"},"source":["!pip install jupyter_http_over_ws\n","!jupyter serverextension enable --py jupyter_http_over_ws"],"execution_count":21,"outputs":[{"output_type":"stream","text":["Collecting jupyter_http_over_ws\n","  Downloading https://files.pythonhosted.org/packages/71/b8/d0047d068facc913a354d14c4664b0ba99b8f30f8d66a1800e98549c06ce/jupyter_http_over_ws-0.0.8-py2.py3-none-any.whl\n","Requirement already satisfied: tornado>=4.5 in /usr/local/lib/python3.7/dist-packages (from jupyter_http_over_ws) (5.1.1)\n","Requirement already satisfied: notebook>=5.0 in /usr/local/lib/python3.7/dist-packages (from jupyter_http_over_ws) (5.3.1)\n","Requirement already satisfied: six>=1.6.0 in /usr/local/lib/python3.7/dist-packages (from jupyter_http_over_ws) (1.15.0)\n","Requirement already satisfied: Send2Trash in /usr/local/lib/python3.7/dist-packages (from notebook>=5.0->jupyter_http_over_ws) (1.5.0)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.7/dist-packages (from notebook>=5.0->jupyter_http_over_ws) (2.11.3)\n","Requirement already satisfied: nbformat in /usr/local/lib/python3.7/dist-packages (from notebook>=5.0->jupyter_http_over_ws) (5.1.3)\n","Requirement already satisfied: jupyter-client>=5.2.0 in /usr/local/lib/python3.7/dist-packages (from notebook>=5.0->jupyter_http_over_ws) (5.3.5)\n","Requirement already satisfied: ipykernel in /usr/local/lib/python3.7/dist-packages (from notebook>=5.0->jupyter_http_over_ws) (4.10.1)\n","Requirement already satisfied: traitlets>=4.2.1 in /usr/local/lib/python3.7/dist-packages (from notebook>=5.0->jupyter_http_over_ws) (5.0.5)\n","Requirement already satisfied: terminado>=0.8.1 in /usr/local/lib/python3.7/dist-packages (from notebook>=5.0->jupyter_http_over_ws) (0.9.4)\n","Requirement already satisfied: jupyter-core>=4.4.0 in /usr/local/lib/python3.7/dist-packages (from notebook>=5.0->jupyter_http_over_ws) (4.7.1)\n","Requirement already satisfied: nbconvert in /usr/local/lib/python3.7/dist-packages (from notebook>=5.0->jupyter_http_over_ws) (5.6.1)\n","Requirement already satisfied: ipython-genutils in /usr/local/lib/python3.7/dist-packages (from notebook>=5.0->jupyter_http_over_ws) (0.2.0)\n","Requirement already satisfied: MarkupSafe>=0.23 in /usr/local/lib/python3.7/dist-packages (from jinja2->notebook>=5.0->jupyter_http_over_ws) (1.1.1)\n","Requirement already satisfied: jsonschema!=2.5.0,>=2.4 in /usr/local/lib/python3.7/dist-packages (from nbformat->notebook>=5.0->jupyter_http_over_ws) (2.6.0)\n","Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.7/dist-packages (from jupyter-client>=5.2.0->notebook>=5.0->jupyter_http_over_ws) (2.8.1)\n","Requirement already satisfied: pyzmq>=13 in /usr/local/lib/python3.7/dist-packages (from jupyter-client>=5.2.0->notebook>=5.0->jupyter_http_over_ws) (22.0.3)\n","Requirement already satisfied: ipython>=4.0.0 in /usr/local/lib/python3.7/dist-packages (from ipykernel->notebook>=5.0->jupyter_http_over_ws) (5.5.0)\n","Requirement already satisfied: ptyprocess; os_name != \"nt\" in /usr/local/lib/python3.7/dist-packages (from terminado>=0.8.1->notebook>=5.0->jupyter_http_over_ws) (0.7.0)\n","Requirement already satisfied: entrypoints>=0.2.2 in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=5.0->jupyter_http_over_ws) (0.3)\n","Requirement already satisfied: pandocfilters>=1.4.1 in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=5.0->jupyter_http_over_ws) (1.4.3)\n","Requirement already satisfied: bleach in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=5.0->jupyter_http_over_ws) (3.3.0)\n","Requirement already satisfied: mistune<2,>=0.8.1 in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=5.0->jupyter_http_over_ws) (0.8.4)\n","Requirement already satisfied: defusedxml in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=5.0->jupyter_http_over_ws) (0.7.1)\n","Requirement already satisfied: pygments in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=5.0->jupyter_http_over_ws) (2.6.1)\n","Requirement already satisfied: testpath in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=5.0->jupyter_http_over_ws) (0.4.4)\n","Requirement already satisfied: decorator in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipykernel->notebook>=5.0->jupyter_http_over_ws) (4.4.2)\n","Requirement already satisfied: pexpect; sys_platform != \"win32\" in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipykernel->notebook>=5.0->jupyter_http_over_ws) (4.8.0)\n","Requirement already satisfied: setuptools>=18.5 in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipykernel->notebook>=5.0->jupyter_http_over_ws) (56.0.0)\n","Requirement already satisfied: prompt-toolkit<2.0.0,>=1.0.4 in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipykernel->notebook>=5.0->jupyter_http_over_ws) (1.0.18)\n","Requirement already satisfied: pickleshare in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipykernel->notebook>=5.0->jupyter_http_over_ws) (0.7.5)\n","Requirement already satisfied: simplegeneric>0.8 in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipykernel->notebook>=5.0->jupyter_http_over_ws) (0.8.1)\n","Requirement already satisfied: webencodings in /usr/local/lib/python3.7/dist-packages (from bleach->nbconvert->notebook>=5.0->jupyter_http_over_ws) (0.5.1)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.7/dist-packages (from bleach->nbconvert->notebook>=5.0->jupyter_http_over_ws) (20.9)\n","Requirement already satisfied: wcwidth in /usr/local/lib/python3.7/dist-packages (from prompt-toolkit<2.0.0,>=1.0.4->ipython>=4.0.0->ipykernel->notebook>=5.0->jupyter_http_over_ws) (0.2.5)\n","Requirement already satisfied: pyparsing>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging->bleach->nbconvert->notebook>=5.0->jupyter_http_over_ws) (2.4.7)\n","Installing collected packages: jupyter-http-over-ws\n","Successfully installed jupyter-http-over-ws-0.0.8\n","Traceback (most recent call last):\n","  File \"/usr/local/bin/jupyter-serverextension\", line 8, in <module>\n","    sys.exit(main())\n","  File \"/usr/local/lib/python2.7/dist-packages/jupyter_core/application.py\", line 267, in launch_instance\n","    return super(JupyterApp, cls).launch_instance(argv=argv, **kwargs)\n","  File \"/usr/local/lib/python2.7/dist-packages/traitlets/config/application.py\", line 658, in launch_instance\n","    app.start()\n","  File \"/usr/local/lib/python2.7/dist-packages/notebook/serverextensions.py\", line 293, in start\n","    super(ServerExtensionApp, self).start()\n","  File \"/usr/local/lib/python2.7/dist-packages/jupyter_core/application.py\", line 256, in start\n","    self.subapp.start()\n","  File \"/usr/local/lib/python2.7/dist-packages/notebook/serverextensions.py\", line 210, in start\n","    self.toggle_server_extension_python(arg)\n","  File \"/usr/local/lib/python2.7/dist-packages/notebook/serverextensions.py\", line 199, in toggle_server_extension_python\n","    m, server_exts = _get_server_extension_metadata(package)\n","  File \"/usr/local/lib/python2.7/dist-packages/notebook/serverextensions.py\", line 327, in _get_server_extension_metadata\n","    m = import_item(module)\n","  File \"/usr/local/lib/python2.7/dist-packages/traitlets/utils/importstring.py\", line 42, in import_item\n","    return __import__(parts[0])\n","ImportError: No module named jupyter_http_over_ws\n"],"name":"stdout"}]}]}